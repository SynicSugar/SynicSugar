using System;
namespace SynicSugar.P2P {
    [AttributeUsage(AttributeTargets.Field,
    Inherited = false)]
    public sealed class SynicAttribute : Attribute {
        byte SyncedHierarchy;
        /// <summary>
        /// Synchronize synic variables all at once to TargetUser . This can send packets larger than 1170. </ br>
        /// This method is to pass basic data to reconnecter. </ br>
        /// *Only for public field. See the SynicSugar document for other conditions.</ br> 
        /// NOTE: The performance of this is very bad. 
        /// Since currently the serializer is external library, the classes for serialization cannot be generated by the source generator. </ br>
        /// So, now SynicSugar convert Synic variables to Json, compress the class that has the Jsons then serialize it by MemoryPack.
        /// </summary>
        /// <param name="syncedHierarchy">Hierarchy or step to which this variable belongs. Currently, can use only 0-9.</ br>
        /// If call SyncSynic with 5, all SynicVariable from 0 to 5 are synchronized.</param>
        public SynicAttribute(byte syncedHierarchy = 0){
            SyncedHierarchy = syncedHierarchy;
        }
    }
}