<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY SynicSugarGenerator. DO NOT CHANGE IT.
// </auto-generated>
using System;
namespace SynicSugar.P2P {
    //For base
    [AttributeUsage(AttributeTargets.Class,
    Inherited = false)]
    /// <summary>
    /// For each user data like game-character and user-data.
    /// </summary>
    internal class NetworkPlayerAttribute : Attribute {
    }
    [AttributeUsage(AttributeTargets.Class,
    Inherited = false)]
    /// <summary>
    /// For shared data like game state and time.
    /// </summary>
    internal class NetworkCommonsAttribute : Attribute {
    }
    //For sync
    [AttributeUsage(AttributeTargets.Field,
    Inherited = false)]
    internal class SyncVarAttribute : Attribute {
        //Only NetworkCommons
        public bool isHost;
        //If not set, the Manager's value is used. 
        public int syncInterval;
        public SyncVarAttribute(){
        }
        /// <summary>
        /// For NetworkCommons 
        /// </summary>
        /// <param name="isOnlyHost"></param>
        public SyncVarAttribute(bool isOnlyHost){
            isHost = isOnlyHost;
        }
        public SyncVarAttribute(bool isOnlyHost, int syncIntervalMs){
            isHost = isOnlyHost;
            syncInterval = syncIntervalMs;
        }
        public SyncVarAttribute(int syncIntervalMs){
            syncInterval = syncIntervalMs;
        }
    }
    [AttributeUsage(AttributeTargets.Method,
    Inherited = false)]
    internal class RpcAttribute : Attribute {
    }
    [AttributeUsage(AttributeTargets.Method,
    Inherited = false)]
    internal class TargetRpcAttribute : Attribute {
    }
}